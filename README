
# Product API

================

## Overview

This is a RESTful API built using Go and the Echo framework. It provides endpoints for managing products and interacting with a supplier API.

## Explain Endpoints

* `/products`
  * Retrieve a list of products from the supplier API
    * If the product is in the cache
      * Do not create them in the database
    * If the product is not in the cache
      * Create them in the cache with 24 hours TTL.
      * Create them in the database

* `/products/:id`
  * Retrieve a product by ID from the supplier API
    * If the product is in the cache
      * Return the product
    * If the product is not in the cache
      * Create them in the cache with 24 hours TTL.
      * Return the product

## Features

* Retrieves products from a supplier API
* Creates products in a PostgreSQL database
* Uses Redis for caching
* Implements CORS middleware for cross-origin requests
* Uses Zap for logging

## Endpoints

### GET /products

Retrieves a list of products from the supplier API and creates them in the database.

## Requirements

* Go 1.17+
* PostgreSQL 13+
* Redis 6+
* Echo 4+
* Zap 1+

## Installation

1. Clone the repository: `git clone https://github.com/fleimkeipa/case-api.git`
2. Install dependencies: `go get -u ./...`
3. Create a `.env` file with the following environment variables:
    * `API_KEY`: Your supplier API key
    * `API_SECRET`: Your supplier API secret
    * `STAGE`: Choose stage for development or production // dev, prod

4. Run the application: `go run main.go`

### ðŸ“¦ Building and Running the API

#### Â Using Docker Compose

1. Clone the repository:

   ```sh
   git clone https://github.com/fleimkeipa/product.git
   cd product
   ```

2. Copy the example configuration file and modify it if necessary:

   ```sh
   cp .env-example .env
   ```

3. Build and run the application using Docker Compose:

   ```sh
   docker-compose up --build -d
   ```

The application will now run in a Docker container and be accessible at the configured port!

#### Running Locally

If you prefer to run the application locally without Docker, follow these steps:

1. Install dependencies:

   ```sh
   go mod download
   ```

2. Build the application:

   ```sh
   go build
   ```

3. Run the application:

   ```sh
   ./case
   ```

Now the API should be running and accessible at your configured port!
